@model EntityLayer.Concrete.Admin
@{
    ViewBag.Title = "EditAdmin";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<br />
<h2>Admin Güncelleme</h2>
@using (Html.BeginForm("EditAdmin", "Authorization", FormMethod.Post))
{
    <div class="form-group">
        @Html.HiddenFor(x => x.Id)
        @Html.Label("Admin Ad")
        @Html.TextBoxFor(x => x.AdminName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AdminName)
        <br />
        @Html.Label("Admin Soyad")
        @Html.TextBoxFor(x => x.AdminSurname, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AdminSurname)
        <br />
        @Html.Label("Admin Mail")
        @Html.TextBoxFor(x => x.AdminUserName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AdminUserName)
        <br />
        @Html.Label("Admin Şifre")
        @Html.TextBoxFor(x => x.AdminPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AdminPassword)
        <br />
        @Html.Label("Admin Resim Linki")
        @Html.TextBoxFor(x => x.AdminImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AdminImage)
        <br />
        @Html.Label("Admin Rol")
        @Html.TextBoxFor(x => x.AdminRole, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AdminRole)
        <br />
        <button class="btn btn-success">Güncelle</button>

    </div>
}

